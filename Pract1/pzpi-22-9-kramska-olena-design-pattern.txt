Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра програмної інженерії




Звіт
з практичної роботи №1
з дисципліни «Архітектура програмного забезпечення»
з теми: «Шаблон проєктування Factory Method»




Виконала:                                                                            Перевірив:
ст. гр. ПЗПІ-22-9                                                                 ст. вк. Сокорчук І.П.
Крамська О. М.




Харків 2025
1 ІСТОРІЯ ЗМІН

Таблиця 1 – Історія змін 
№	Дата	Версія звіту	Опис змін та виправлень
1	19.05.2025	1.0	Заповнено розділи 2, 3 та 4. Створено додатки А, Б та В

 
2 ЗАВДАННЯ

Під час практичного заняття необхідно виконати наступні завдання:
1)	Підготувати доповідь на тему: «Шаблон проєктування ПЗ» Ґамма.
2)	Створити та оформити презентацію до доповіді.
3)	Записати та опублікувати відео доповіді на YouTube.
4)	Оформити звіт та завантажити його на dl.nure.ua
5)	За потреби — створити GitHub-акаунт з поштою у домені nure.ua
6)	Створити репозиторій з назвою згідно вимогам, головна гілка — main.
7)	У корені репозиторію створити README.md із назвою, ПІБ, групою, темами ПЗ1, ПЗ2 та темою проєкту
8)	Створити папку Pract1 з: текстовим звітом у форматі .txt та підкаталогом із кодом для ПЗ1

 
3 ОПИС ВИКОНАНОЇ РОБОТИ

Під час практичного заняття було підготовлено доповідь на тему «Шаблон проєктування Factory Method» відповідно до книги Е. Ґамма. Створено презентацію та записано відеозвіт, який опубліковано на YouTube. Звіт оформлено згідно з вимогами ДСТУ 3008:2015 та завантажено на платформу dl.nure.ua.
Також створено GitHub-репозиторій із головною гілкою main. У репозиторії додано файл README.md з основною інформацією, папку Pract1, що містить текстовий звіт і програмний код, використаний у доповіді.

 
4  ВИСНОВКИ

Під час виконання практичного завдання я ознайомилася з шаблоном проєктування Factory Method, повторила основи об’єктно-орієнтованого програмування та поглибила знання про шаблони проєктування відповідно до книги Е. Ґамма «Design Patterns».
 
ДОДАТОК А
Посилання на відеозапис та хронологічний опис доповіді

Відеозапис доповіді на YouTube: https://youtu.be/UQV42-tKKiI

Хронологічний опис відео:
00:00 - Титульний слайд
00:14 - Слайд зі змістом презентації
00:21 - Слайд «Вступ»
00:43 - Слайд «Призначення Factory Method»
01:08 - Слайд «Проблема, яку вирішує патерн»
01:35 - Слайд «Суть рішення»
02:02 - Слайд «UML діаграма патерна»
02:35 - Слайд «Приклад з реального життя»
02:57 - Слайд «Інтерфейс продукту»
03:19 - Слайд «Конкретні продукти»
03:36 - Слайд «Абстрактний клас-створювач»
03:57 - Слайд «Конкретні створювачі»
04:12 - Слайд «Використання»
04:30 - Слайд «Переваги»
04:52 - Слайд «Недоліки»
05:12 - Слайд «Висновки»
05:34 - Слайд «Список використаних джерел»
05:42 - Слайд «Дякую за увагу»

 
ДОДАТОК Б
Слайди презентації доповіді
 
Рисунок Б.1 – Титульний слайд

 
Рисунок Б.2 – Слайд зі змістом презентації

 
Рисунок Б.3 – Слайд «Вступ»

 
Рисунок Б.4 – Слайд «Призначення Factory Method»

 
Рисунок Б.5 – Слайд «Проблема, яку вирішує патерн»


Рисунок Б.6 – Слайд «Суть рішення»

 
Рисунок Б.7 – Слайд «UML діаграма патерна»

 
Рисунок Б.8 – Слайд «Приклад з реального життя»

 
Рисунок Б.9 – Слайд «Інтерфейс продукту»

 
Рисунок Б.10 – Слайд «Конкретні продукти»

 
Рисунок Б.11 –  Слайд «Абстрактний клас-створювач»

 
Рисунок Б.12 – Слайд «Конкретні створювачі»

 
Рисунок Б.13 – Слайд «Використання»

 
Рисунок Б.14 – Слайд «Переваги»

 
Рисунок Б.15 – Слайд «Недоліки»

 
Рисунок Б.16 – Слайд «Висновки»

 
Рисунок Б.17 – Слайд «Список використаних джерел»

 
Рисунок Б.18 – Слайд «Дякую за увагу»
 
ДОДАТОК В
Програмний код
public interface IButton
{
    void Render();
}

public class WindowsButton : IButton
{
    public void Render() => Console.WriteLine("Rendering Windows Button");
}

public class MacButton : IButton
{
    public void Render() => Console.WriteLine("Rendering Mac Button");
}

public abstract class Dialog
{
    public void RenderWindow()
    {
        IButton okButton = CreateButton();
        okButton.Render();
    }

    public abstract IButton CreateButton();
}

public class WindowsDialog : Dialog
{
    public override IButton CreateButton() => new WindowsButton();
}

public class MacDialog : Dialog
{
    public override IButton CreateButton() => new MacButton();
}

class Program
{
    static void Main()
    {
        Dialog dialog = new WindowsDialog();
        dialog.RenderWindow();
    }
}
